import{_ as s,o as a,c as e,a as n}from"./app.fdb347c4.js";const h=JSON.parse('{"title":"Django","description":"","frontmatter":{},"headers":[{"level":2,"title":"MTV architecture","slug":"mtv-architecture","link":"#mtv-architecture","children":[]},{"level":2,"title":"Basic Usage","slug":"basic-usage","link":"#basic-usage","children":[{"level":3,"title":"Create Project","slug":"create-project","link":"#create-project","children":[]},{"level":3,"title":"Create App","slug":"create-app","link":"#create-app","children":[]},{"level":3,"title":"Run development Server","slug":"run-development-server","link":"#run-development-server","children":[]},{"level":3,"title":"Create a model","slug":"create-a-model","link":"#create-a-model","children":[]},{"level":3,"title":"Foreign keys","slug":"foreign-keys","link":"#foreign-keys","children":[]},{"level":3,"title":"Simple Lookups","slug":"simple-lookups","link":"#simple-lookups","children":[]},{"level":3,"title":"More complex lookups","slug":"more-complex-lookups","link":"#more-complex-lookups","children":[]},{"level":3,"title":"The Django template engine","slug":"the-django-template-engine","link":"#the-django-template-engine","children":[]}]}],"relativePath":"python/web/django.md"}'),l={name:"python/web/django.md"},o=n(`<h1 id="django" tabindex="-1">Django <a class="header-anchor" href="#django" aria-hidden="true">#</a></h1><ul><li><a href="https://docs.djangoproject.com/" target="_blank" rel="noreferrer">Documentation</a></li></ul><p>Django is a high-level Python web framework used for building web applications quickly and easily. It provides a variety of tools and libraries for handling common web development tasks, such as managing databases, handling user authentication and permissions, and handling requests and responses.</p><p>Django follows the Model-View-Controller (MVC) architectural pattern, and provides an Object-Relational Mapping (ORM) system that allows developers to work with databases using Python objects. This makes it easy to create and manage databases and data models in web applications.</p><p>Django also includes a variety of built-in tools for handling common web development tasks, such as managing user authentication and permissions, handling forms and input validation, and handling static and media files. It also includes a powerful templating system that makes it easy to create dynamic and responsive web pages.</p><p>Django is a popular choice for web development in Python due to its ease of use, flexibility, and powerful features. It is used by many organizations and companies for building web applications, from small startups to large-scale enterprise applications.</p><h2 id="mtv-architecture" tabindex="-1">MTV architecture <a class="header-anchor" href="#mtv-architecture" aria-hidden="true">#</a></h2><p>In a model-template-views pattern as used in Django, the <a href="https://docs.djangoproject.com/en/4.1/topics/db/" target="_blank" rel="noreferrer">model</a> is used to interact with a database, the <a href="https://docs.djangoproject.com/en/4.1/topics/templates/" target="_blank" rel="noreferrer">templates</a> are used to define the rendered HTML, and the <a href="https://docs.djangoproject.com/en/4.1/topics/http/views/" target="_blank" rel="noreferrer">views</a> are used as a glue between them, doing the processing. Other useful tools are <a href="https://docs.djangoproject.com/en/4.1/topics/forms/" target="_blank" rel="noreferrer">forms</a>, that define a way to quickly validate data coming from the outside, and the <a href="https://docs.djangoproject.com/en/4.1/ref/contrib/admin/" target="_blank" rel="noreferrer">admin site</a> that allows to easily browse the data contained in the models once configured.</p><p>Django can also be used as a backend REST server, usually with the help of <a href="https://www.django-rest-framework.org/" target="_blank" rel="noreferrer">Django REST framework</a> that provides tools to easily define a REST API without much more code than the models (if the API is simple).</p><h2 id="basic-usage" tabindex="-1">Basic Usage <a class="header-anchor" href="#basic-usage" aria-hidden="true">#</a></h2><h3 id="create-project" tabindex="-1">Create Project <a class="header-anchor" href="#create-project" aria-hidden="true">#</a></h3><p>To create a <code>mysite</code> project, run :</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">django-admin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">startproject</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysite</span></span>
<span class="line"></span></code></pre></div><p>This command will create the following directory structure :</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">mysite/</span></span>
<span class="line"><span style="color:#A6ACCD;">    manage.py</span></span>
<span class="line"><span style="color:#A6ACCD;">    mysite/</span></span>
<span class="line"><span style="color:#A6ACCD;">        __init__.py</span></span>
<span class="line"><span style="color:#A6ACCD;">        settings.py</span></span>
<span class="line"><span style="color:#A6ACCD;">        urls.py</span></span>
<span class="line"><span style="color:#A6ACCD;">        asgi.py</span></span>
<span class="line"><span style="color:#A6ACCD;">        wsgi.py</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="create-app" tabindex="-1">Create App <a class="header-anchor" href="#create-app" aria-hidden="true">#</a></h3><p>To create a <code>polls</code> app, run in the <code>mysite</code> folder :</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#82AAFF;">.</span><span style="color:#FFCB6B;">/manage.py</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">startapp</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">polls</span></span>
<span class="line"></span></code></pre></div><p>This command will create the following directory structure :</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">polls/</span></span>
<span class="line"><span style="color:#A6ACCD;">    __init__.py</span></span>
<span class="line"><span style="color:#A6ACCD;">    admin.py</span></span>
<span class="line"><span style="color:#A6ACCD;">    apps.py</span></span>
<span class="line"><span style="color:#A6ACCD;">    migrations/</span></span>
<span class="line"><span style="color:#A6ACCD;">        __init__.py</span></span>
<span class="line"><span style="color:#A6ACCD;">    models.py</span></span>
<span class="line"><span style="color:#A6ACCD;">    tests.py</span></span>
<span class="line"><span style="color:#A6ACCD;">    urls.py</span></span>
<span class="line"><span style="color:#A6ACCD;">    views.py</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="run-development-server" tabindex="-1">Run development Server <a class="header-anchor" href="#run-development-server" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#82AAFF;">.</span><span style="color:#FFCB6B;">/manage.py</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">runserver</span></span>
<span class="line"></span></code></pre></div><p>This launches a development server at <code>http://localhost:8000/</code> by default.</p><p>A useful tool for development is the <a href="https://django-debug-toolbar.readthedocs.io/en/latest/" target="_blank" rel="noreferrer">Django debug toolbar</a> that allows to easily see what route, view and SQL was used for requests. It adds a sidebar to every HTML page that includes a <code>&lt;/body&gt;</code> tag.</p><p>To get debug information about pages without a closing <code>&lt;/body&gt;</code> tag, you can use the history tab in the toolbar of another page running on the same development server.</p><h3 id="create-a-model" tabindex="-1">Create a model <a class="header-anchor" href="#create-a-model" aria-hidden="true">#</a></h3><p>Every model class corresponds to a table in your database. A primary key is created automatically, named <code>id</code> and of type <code>BigIntegerField</code>. It is used for relations created with <code>ForeignKey</code>, <code>OneToOneField</code> and <code>ManyToManyField</code>.</p><p>A simple model looks like this:</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> django</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">db </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> models</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Book</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">models</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Model</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># define the fields here</span></span>
<span class="line"><span style="color:#A6ACCD;">    title </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> models</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CharField</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">max_length</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">255</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    page_count </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> models</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">PositiveIntegerField</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    price </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> models</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">DecimalField</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">max_digits</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">decimal_places</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">null</span><span style="color:#89DDFF;">=True)</span></span>
<span class="line"><span style="color:#A6ACCD;">    personal_comment </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> models</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">TextField</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">blank</span><span style="color:#89DDFF;">=True)</span></span>
<span class="line"></span></code></pre></div><p><code>DecimalField</code> are nice to get exact fractional values that cannot be represented by floating point numbers. They are fixed point numbers and require the decimal place to be fixed in place.</p><p>The <code>null</code> parameter is <code>False</code> by default. To allow the value to be a SQL <code>NULL</code>, aka python&#39;s <code>None</code>, you need to add <code>null=True</code> to the field definition.</p><p>For textual fields, the <code>blank</code> parameter allows the value to be the empty string, it is <code>False</code> by default. It is not recommended to use both <code>null=True</code> and <code>blank=True</code> on a field as there are then two representation of &quot;empty&quot; for that field, which makes it harder to query for empty values.</p><p><strong>After editing any model</strong> you need to create the migration files by running:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#82AAFF;">.</span><span style="color:#FFCB6B;">/manage.py</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">makemigrations</span></span>
<span class="line"></span></code></pre></div><p>You then need to apply all created migrations to the database by running the following command:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#82AAFF;">.</span><span style="color:#FFCB6B;">/manage.py</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">migrate</span></span>
<span class="line"></span></code></pre></div><h3 id="foreign-keys" tabindex="-1">Foreign keys <a class="header-anchor" href="#foreign-keys" aria-hidden="true">#</a></h3><p>When referencing a model in another model, one might use a foreign key field. In the following example, Authors write Articles, Articles are created in different Categories, and Comments are made to Articles.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Author</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">models</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Model</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> models</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CharField</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">max_length</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">255</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Category</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">models</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Model</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    title </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> models</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CharField</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">max_length</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">255</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Article</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">models</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Model</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    title </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> models</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CharField</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">max_length</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">255</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    category </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> models</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ForeignKey</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">Category</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">on_delete</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">models</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">PROTECT</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    author </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> models</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ForeignKey</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">Category</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">null</span><span style="color:#89DDFF;">=True</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">on_delete</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">models</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">SET_NULL</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Comment</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">models</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">Model</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    content </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> models</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CharField</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">max_length</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">255</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    article </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> models</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ForeignKey</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">Article</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">on_delete</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">models</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">CASCADE</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>We expect different behaviors when the referenced object is deleted.</p><ul><li><code>SET_NULL</code> : When an <code>Author</code> is deleted, we want to keep any article referencing that author as an authorless article. The <code>Article</code> author field is set to <code>null</code>, indicating an unknown author.</li><li><code>CASCADE</code> : When an <code>Article</code> is deleted, the associated comments are meaningless : any <code>Comment</code> referencing this article therefore self-destructs.</li><li><code>PROTECT</code> : When a category is deleted, any <code>Article</code> referencing this <code>Category</code> will <strong>prevent</strong> the deletion of the said category.</li></ul><p><a href="https://docs.djangoproject.com/en/4.1/ref/models/fields/#django.db.models.ForeignKey.on_delete" target="_blank" rel="noreferrer">More actions</a> are possible for more specific situations.</p><h3 id="simple-lookups" tabindex="-1">Simple Lookups <a class="header-anchor" href="#simple-lookups" aria-hidden="true">#</a></h3><p>Django <code>filter</code> method take one or more <a href="https://docs.djangoproject.com/en/3.0/ref/models/querysets/#field-lookups" target="_blank" rel="noreferrer">Field lookup</a> as an argument.</p><blockquote><p><em>From django docs</em> : Multiple parameters are joined via AND in the underlying SQL statement.</p></blockquote><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">Book</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">objects</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">price</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">12.56</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># price == 12.56</span></span>
<span class="line"><span style="color:#A6ACCD;">Book</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">objects</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">price__range</span><span style="color:#89DDFF;">=(</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">15</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># 10 &lt;= price &lt;= 15</span></span>
<span class="line"><span style="color:#A6ACCD;">Book</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">objects</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">price__gte</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">15</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># price &lt;= 15</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># price &gt; 15, and no title ending with a question mark</span></span>
<span class="line"><span style="color:#A6ACCD;">Book</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">objects</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">price__lt</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">15</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">exclude</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">title__endswith</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># price &gt; 10 AND price &lt; 15</span></span>
<span class="line"><span style="color:#A6ACCD;">Book</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">objects</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">price__gt</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">price__lt</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">15</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Title contains &quot;nuit&quot;, case insensitive.</span></span>
<span class="line"><span style="color:#A6ACCD;">Book</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">objects</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">title__icontains</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">nuit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre></div><h3 id="more-complex-lookups" tabindex="-1">More complex lookups <a class="header-anchor" href="#more-complex-lookups" aria-hidden="true">#</a></h3><p>Using <a href="https://docs.djangoproject.com/en/3.0/topics/db/queries/#complex-lookups-with-q" target="_blank" rel="noreferrer">Q objects</a> is the recommended way of doing more complex lookups.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># A cheap book (price&lt;3) OR a small book (page_count&lt;50)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># That starts with &quot;The tales of...&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Book</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">objects</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#82AAFF;">    Q</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">page_count__lt</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">50</span><span style="color:#89DDFF;">)</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">|</span><span style="color:#82AAFF;"> Q</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">price__lt</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#82AAFF;">    </span><span style="color:#A6ACCD;font-style:italic;">title__startswith</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">The tales of</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><blockquote><p><em>From django docs</em> : Lookup functions can mix the use of Q objects and keyword arguments. All arguments provided to a lookup function (be they keyword arguments or Q objects) are “AND”ed together. However, if a Q object is provided, it must precede the definition of any keyword arguments.</p></blockquote><h3 id="the-django-template-engine" tabindex="-1">The Django template engine <a class="header-anchor" href="#the-django-template-engine" aria-hidden="true">#</a></h3><p>Django has its own template engine that is very similar to Jinja. See the Jinja cheatsheet for more info about the template syntax.</p><p>Some features from Jinja are not available, notably the ability to remove whitespace before and after jinja tags with the <code>-</code> prefix/suffix. It is possible to use the Jinja engine instead of the Django engine by changing <a href="https://docs.djangoproject.com/en/4.1/ref/settings/#templates" target="_blank" rel="noreferrer">the template configuration</a> in the settings.</p>`,53),t=[o];function p(r,c,i,y,d,F){return a(),e("div",null,t)}const A=s(l,[["render",p]]);export{h as __pageData,A as default};

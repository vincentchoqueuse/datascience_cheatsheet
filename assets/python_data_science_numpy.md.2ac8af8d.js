import{_ as s,o as a,c as n,a as l}from"./app.650a14e3.js";const h=JSON.parse('{"title":"Numpy","description":"","frontmatter":{},"headers":[{"level":2,"title":"Getting Started","slug":"getting-started","link":"#getting-started","children":[{"level":3,"title":"Import","slug":"import","link":"#import","children":[]},{"level":3,"title":"Example","slug":"example","link":"#example","children":[]}]},{"level":2,"title":"Array Creation","slug":"array-creation","link":"#array-creation","children":[{"level":3,"title":"Custom content","slug":"custom-content","link":"#custom-content","children":[]},{"level":3,"title":"Specific content","slug":"specific-content","link":"#specific-content","children":[]}]}],"relativePath":"python/data_science/numpy.md"}'),e={name:"python/data_science/numpy.md"},o=l(`<h1 id="numpy" tabindex="-1">Numpy <a class="header-anchor" href="#numpy" aria-hidden="true">#</a></h1><p>NumPy is a library that adds support for large, multi-dimensional arrays and matrices, along with a large collection of high-level mathematical functions to operate on these arrays</p><ul><li><a href="https://numpy.org/doc/stable/reference/index.html" target="_blank" rel="noreferrer">Documentation</a></li></ul><h2 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-hidden="true">#</a></h2><h3 id="import" tabindex="-1">Import <a class="header-anchor" href="#import" aria-hidden="true">#</a></h3><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> numpy </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> np</span></span>
<span class="line"></span></code></pre></div><p>Numpy introduces a type called <code>array</code>.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h3><p>To illustrate the benefit of the type <code>array</code>, let us consider the creation of a sinewave with 5 Hz fundamental frequency with both naive Python and the library Numpy.</p><h4 id="naive-python-implementation" tabindex="-1">Naive Python implementation <a class="header-anchor" href="#naive-python-implementation" aria-hidden="true">#</a></h4><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> math </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> sin</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> pi</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Fs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.01</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># sampling frequency</span></span>
<span class="line"><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># create an empty list</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> n </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">range</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;">    x_temp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">sin</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">pi</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">n</span><span style="color:#89DDFF;">/</span><span style="color:#82AAFF;">Fs</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    x</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">x_temp</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h4 id="numpy-implementation" tabindex="-1">Numpy implementation <a class="header-anchor" href="#numpy-implementation" aria-hidden="true">#</a></h4><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> numpy </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Fs </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.01</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># sampling frequency</span></span>
<span class="line"><span style="color:#A6ACCD;">n </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">arange</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;"># create and array with evenly spaced values within [0, 100) with step 1</span></span>
<span class="line"><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sin</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">np</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">pi</span><span style="color:#89DDFF;">*</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">t</span><span style="color:#89DDFF;">/</span><span style="color:#82AAFF;">Fs</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>By using Numpy&#39;s vectorized operations, you can perform mathematical operations on entire arrays at once, without the need for explicit <code>for</code> loops. As compared to Naive Python implementation, this can result in faster and more concise code.</p><h2 id="array-creation" tabindex="-1">Array Creation <a class="header-anchor" href="#array-creation" aria-hidden="true">#</a></h2><h3 id="custom-content" tabindex="-1">Custom content <a class="header-anchor" href="#custom-content" aria-hidden="true">#</a></h3><p>A Numpy array is usually created from a list of numbers.</p><ul><li>1D Array creation from a list of numbers:</li></ul><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">my_array </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">array</span><span style="color:#89DDFF;">([</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">12</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">])</span></span>
<span class="line"></span></code></pre></div><ul><li>1D Array creation using elements with predefined type :</li></ul><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">my_array </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">array</span><span style="color:#89DDFF;">([</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">12</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">],</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">dtype</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> </span><span style="color:#FFCB6B;">float</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><ul><li>2D array creation from a list of list :</li></ul><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">my_array </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">array</span><span style="color:#89DDFF;">([[</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">12</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">],[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">]])</span></span>
<span class="line"></span></code></pre></div><h3 id="specific-content" tabindex="-1">Specific content <a class="header-anchor" href="#specific-content" aria-hidden="true">#</a></h3><p>For large arrays, it can be tedius to define each element of the array one by one. To solve this problem, Numpy offers a large collection of functions for the creation of arrays with particular structures.</p><h4 id="empty-array" tabindex="-1">Empty array <a class="header-anchor" href="#empty-array" aria-hidden="true">#</a></h4><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">my_array </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">zeros</span><span style="color:#89DDFF;">((</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">))</span></span>
<span class="line"></span></code></pre></div><ul><li>This syntax creates an empty 2D array with 3 rows and 4 columns filled with zeros.</li></ul><h4 id="array-filled-with-ones" tabindex="-1">Array filled with ones <a class="header-anchor" href="#array-filled-with-ones" aria-hidden="true">#</a></h4><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">my_array </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ones</span><span style="color:#89DDFF;">((</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">))</span></span>
<span class="line"></span></code></pre></div><ul><li>This syntax creates a 2D array with 3 rows and 4 columns filled with ones.</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can use The syntax: <code>10*np.ones((3,4))</code> create a Numpy array filled with 10.</p></div><h4 id="diagonal-array" tabindex="-1">Diagonal Array <a class="header-anchor" href="#diagonal-array" aria-hidden="true">#</a></h4><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">my_array </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">eye</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><ul><li>This syntax creates a 2D arrays with ones on the diagonal and zeros elsewhere.</li></ul><h4 id="array-with-evenly-spaced-values-within-a-given-interval" tabindex="-1">Array with evenly spaced values within a given interval <a class="header-anchor" href="#array-with-evenly-spaced-values-within-a-given-interval" aria-hidden="true">#</a></h4><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">my_array </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">arange</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><ul><li>This syntax creates a 1D array of values ranging from 0 to 10 (excluded) with step 1.</li></ul><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">my_array </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">arange</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">0.5</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><ul><li>This syntax creates a 1D array of values generated within the half-open interval <code>[1, 10)</code>, with spacing between values given by <code>0.5</code>.</li></ul><h4 id="array-with-evenly-spaced-numbers-over-a-specified-interval" tabindex="-1">Array with evenly spaced numbers over a specified interval <a class="header-anchor" href="#array-with-evenly-spaced-numbers-over-a-specified-interval" aria-hidden="true">#</a></h4><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">my_array </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">linspace</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1.0</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">10.0</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;font-style:italic;">num</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><ul><li>This syntax creates a 1D array of 5 evenly spaced values generated within the interval <code>[1, 10]</code>.</li></ul>`,43),p=[o];function t(r,c,i,y,F,D){return a(),n("div",null,p)}const C=s(e,[["render",t]]);export{h as __pageData,C as default};

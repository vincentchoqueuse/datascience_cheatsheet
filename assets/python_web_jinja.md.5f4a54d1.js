import{_ as s,o as a,c as n,a as e}from"./app.f1a68c47.js";const h=JSON.parse('{"title":"Jinja","description":"","frontmatter":{},"headers":[{"level":2,"title":"Starter Template","slug":"starter-template","link":"#starter-template","children":[{"level":3,"title":"Project structure","slug":"project-structure","link":"#project-structure","children":[]}]},{"level":2,"title":"Variable Filters","slug":"variable-filters","link":"#variable-filters","children":[]},{"level":2,"title":"if Statements","slug":"if-statements","link":"#if-statements","children":[]},{"level":2,"title":"for Loops","slug":"for-loops","link":"#for-loops","children":[]},{"level":2,"title":"Template Inheritance","slug":"template-inheritance","link":"#template-inheritance","children":[]}],"relativePath":"python/web/jinja.md"}'),l={name:"python/web/jinja.md"},t=e(`<h1 id="jinja" tabindex="-1">Jinja <a class="header-anchor" href="#jinja" aria-hidden="true">#</a></h1><ul><li><a href="https://jinja.palletsprojects.com/" target="_blank" rel="noreferrer">Documentation</a></li></ul><p>Jinja2 is a popular template engine for Python web applications that allows developers to generate dynamic HTML, XML, or other markup documents using templates. It is widely used in popular Python web frameworks such as Flask, Django, and Pyramid. Jinja2 uses a template language that is designed to be easy to read and write, with syntax that is similar to other programming languages like Python. It allows developers to define templates that contain placeholders for dynamic data, which can be filled in at runtime with values from Python code.</p><p>Some of the key features of Jinja2 include:</p><ul><li>Template inheritance, which allows developers to create base templates that can be extended and customized by other templates.</li><li>Conditional statements and loops, which allow for the creation of dynamic content in templates.</li><li>Support for filters, which are functions that can be used to modify data before it is displayed in a template.</li><li>Autoescaping of output, which helps protect against cross-site scripting (XSS) attacks.</li></ul><p>Jinja2 is a powerful and flexible template engine that makes it easy to create dynamic web pages in Python web applications. It is widely used and well-documented, making it a popular choice for many web developers.</p><h2 id="starter-template" tabindex="-1">Starter Template <a class="header-anchor" href="#starter-template" aria-hidden="true">#</a></h2><h3 id="project-structure" tabindex="-1">Project structure <a class="header-anchor" href="#project-structure" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">├── app.py</span></span>
<span class="line"><span style="color:#A6ACCD;">└── templates</span></span>
<span class="line"><span style="color:#A6ACCD;">    └── index.html</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-We79G" id="tab-1N9l50S" checked="checked"><label for="tab-1N9l50S">app.py</label><input type="radio" name="group-We79G" id="tab-nm8_JJ4"><label for="tab-nm8_JJ4">templates/index.html</label></div><div class="blocks"><div class="language-python active"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> jinja2 </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> Environment</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> FileSystemLoader</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">env </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Environment</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">loader</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">FileSystemLoader</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">templates</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># loading the jinja2 environment</span></span>
<span class="line"><span style="color:#A6ACCD;">template </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> env</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get_template</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">index.html</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">content </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> template</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">render</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">message</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello World !</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">content</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;"># index.html</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;!</span><span style="color:#F07178;">DOCTYPE</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">html</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">en</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">My Webpage</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">My Webpage</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        {{ message }}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div></div></div><p>It is also possible to dump the complete stream into a file or file-like object. Per default strings are written, if you want to encode before writing specify an encoding.</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">template</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stream</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">message</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello World !</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">dump</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hello.html</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="variable-filters" tabindex="-1">Variable Filters <a class="header-anchor" href="#variable-filters" aria-hidden="true">#</a></h2><p>In Jinja2, variable filters are a feature that allows you to modify the value of a variable before it is displayed in a template. Variable filters are applied to a variable by appending a pipe symbol | to the variable, followed by the name of the filter and any arguments.</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">{{ message | upper  }}</span></span>
<span class="line"></span></code></pre></div><p>Jinja2 comes with many built-in filters, such as capitalize, lower, upper, truncate, and safe. You can also define your own custom filters by creating a Python function and registering it with Jinja2.</p><h2 id="if-statements" tabindex="-1">if Statements <a class="header-anchor" href="#if-statements" aria-hidden="true">#</a></h2><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">{% if message == &#39;hello&#39; %}</span></span>
<span class="line"><span style="color:#A6ACCD;">Demat</span></span>
<span class="line"><span style="color:#A6ACCD;">{% else %}</span></span>
<span class="line"><span style="color:#A6ACCD;">Kenavo</span></span>
<span class="line"><span style="color:#A6ACCD;">{% endif %}</span></span>
<span class="line"></span></code></pre></div><h2 id="for-loops" tabindex="-1">for Loops <a class="header-anchor" href="#for-loops" aria-hidden="true">#</a></h2><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">{% for my_item in my_list %}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">my_item</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">{% endfor %}</span></span>
<span class="line"></span></code></pre></div><p>You can access the index of a loop iteration using the <code>loop.index</code> variable.</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">{% for my_item in my_list %}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">my_item {{loop.index}}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">{% endfor %}</span></span>
<span class="line"></span></code></pre></div><h2 id="template-inheritance" tabindex="-1">Template Inheritance <a class="header-anchor" href="#template-inheritance" aria-hidden="true">#</a></h2><p>Template inheritance in Jinja is a way to reuse common elements across multiple templates in a web application. It allows you to define a base template with the common elements such as header, footer, navigation bar, etc., and then inherit from it in child templates. The child templates can then override specific blocks in the base template with their own content, while still keeping the common elements.</p><p>To use template inheritance in Jinja, you first define a base template using the <code>{% extends %}</code> tag. Then you can define blocks within the base template using the <code>{% block %}</code> tag. In the child templates, you can override specific blocks using the same <code>{% block %}</code> tag with the same name.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-eHvFl" id="tab-Uebs00m" checked="checked"><label for="tab-Uebs00m">base.html</label><input type="radio" name="group-eHvFl" id="tab-DzWqDt_"><label for="tab-DzWqDt_">index.html</label></div><div class="blocks"><div class="language-html active"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    {% block content %}{% endblock %}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">{% extends base.html %}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">{% block content %}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">My Webpage</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h1</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    {{ message }}</span></span>
<span class="line"><span style="color:#A6ACCD;">{% endblock %}</span></span>
<span class="line"></span></code></pre></div></div></div>`,26),p=[t];function o(c,i,r,y,d,D){return a(),n("div",null,p)}const m=s(l,[["render",o]]);export{h as __pageData,m as default};

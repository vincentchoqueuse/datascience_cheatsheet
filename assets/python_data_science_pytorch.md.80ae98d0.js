import{_ as a,o as n,c as o,a as s}from"./app.0972b3d3.js";const f=JSON.parse('{"title":"Pytorch","description":"","frontmatter":{},"headers":[{"level":2,"title":"Installation","slug":"installation","link":"#installation","children":[{"level":3,"title":"Pip","slug":"pip","link":"#pip","children":[]},{"level":3,"title":"Conda","slug":"conda","link":"#conda","children":[]}]}],"relativePath":"python/data_science/pytorch.md"}'),e={name:"python/data_science/pytorch.md"},t=s(`<h1 id="pytorch" tabindex="-1">Pytorch <a class="header-anchor" href="#pytorch" aria-hidden="true">#</a></h1><ul><li><a href="https://pytorch.org/docs/stable/index.html" target="_blank" rel="noreferrer">Documentation</a></li></ul><p>PyTorch is an open source machine learning library used for building and training neural networks. It is developed and maintained by Facebook&#39;s AI Research lab. PyTorch is designed to be flexible and efficient, with a focus on dynamic computational graphs that allow for efficient computation of gradients during model training.</p><p>PyTorch provides a variety of tools for building and training neural networks, including pre-built modules for common network layers, loss functions, and optimizers. It also allows for easy integration with other Python libraries, such as NumPy and Pandas, making it a powerful tool for data analysis and manipulation in addition to machine learning.</p><p>One of the unique features of PyTorch is its use of tensors as the fundamental data structure for computations, which makes it easy to perform mathematical operations on multi-dimensional arrays. PyTorch also provides tools for deploying trained models to production, including support for popular deployment platforms such as ONNX and TensorFlow. Overall, PyTorch is a popular choice for deep learning projects due to its flexibility, ease of use, and powerful capabilities.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-hidden="true">#</a></h2><p>You can install Pytorch using pip or conda by running the following command in your terminal:</p><h3 id="pip" tabindex="-1">Pip <a class="header-anchor" href="#pip" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">pip</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">torch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">torchvision</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">torchaudio</span></span>
<span class="line"></span></code></pre></div><h3 id="conda" tabindex="-1">Conda <a class="header-anchor" href="#conda" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">conda</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pytorch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">torchvision</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">torchaudio</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cudatoolkit={version}</span></span>
<span class="line"></span></code></pre></div><p>Note that you need to specify the appropriate version of CUDA toolkit if you are using GPU.</p>`,12),i=[t];function l(r,p,c,d,h,u){return n(),o("div",null,i)}const m=a(e,[["render",l]]);export{f as __pageData,m as default};
